{"version":3,"sources":["Components/Home.js","Components/Login.js","Components/Entry.js","Components/Quiz2.js","Components/Quiz3.js","Components/Quiz1.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","getMetaData","api","fetch","then","x","json","out","console","log","catch","e","q","n","p","i","length","push","id","name","pic","setState","load","drawPics","title","state","className","to","src","process","alt","body","t","scores","this","username","location","userN","React","Component","Login","onSubmit","event","user","trim","userGood","preventDefault","whenChanged","value","target","from","pathname","type","onChange","Entry","entry","page","image","Quiz2","wrong","count","cursor","temp","answers","answer","entries","right","questionNames","questchoice","onClick","handleKeyDown","keyCode","restart","load1","load2","getQuizData","qpic","qchoice","picture","j","choices","qid","score","total","Quiz3","Quiz1","data","method","headers","JSON","stringify","y","App","path","render","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"wVA0FeA,G,wDApFX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAUVC,YAAc,WACV,IAAIC,EAAM,sDACVC,MAAMD,GAAKE,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,MAAK,SAAAG,GAAG,OAAIC,QAAQC,IAAIF,MAAMG,OAAM,SAAAC,GAAC,OAAIH,QAAQC,IAAIE,MACpFR,MAAMD,GAAKE,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,MAAK,SAAAG,GAChCC,QAAQC,IAAIF,GAIZ,IAHA,IAAIK,EAAI,GACJC,EAAI,GACJC,EAAI,GACAC,EAAE,EAAEA,EAAER,EAAIS,OAAOD,IACrBH,EAAEK,KAAKV,EAAIQ,GAAGG,IACdL,EAAEI,KAAKV,EAAIQ,GAAGI,MACdL,EAAEG,KAAKV,EAAIQ,GAAGK,KAElB,EAAKC,SAAS,CAACH,GAAIN,IACnB,EAAKS,SAAS,CAACF,KAAMN,IACrB,EAAKQ,SAAS,CAACD,IAAKN,OACrBJ,OAAM,SAAAC,GAAC,OAAIH,QAAQC,IAAIE,MAC1B,EAAKU,SAAS,CAACC,MAAM,KA5BP,EA+BlBC,SAAW,SAACL,GACR,IAAIM,EAAQ,QAAQ,EAAKC,MAAMP,GAAGA,GAElC,OADAV,QAAQC,IAAIe,GAER,yBAAKE,UAAU,YACX,kBAAC,IAAD,CAAMC,GAAIH,GACN,yBAAKE,UAAU,QAAQE,IAAKC,qBAAsC,EAAKJ,MAAML,IAAIF,GAAKY,IAAI,KAC1F,6BACC,EAAKL,MAAMN,KAAKD,MAvCf,EA6ClBa,KAAO,WAEH,IADA,IAAIC,EAAI,GACAjB,EAAE,EAAEA,EAAE,EAAKU,MAAMN,KAAKH,OAAOD,IACjCiB,EAAEf,KAAK,EAAKM,SAASR,IAEzB,OAAOiB,GAhDP,EAAKP,MAAQ,CACTH,MAAM,EACNJ,GAAI,EACJE,IAAK,GACLD,KAAM,GACNc,OAAQ,IAPE,E,qDAuDXC,KAAKT,MAAMH,MACVY,KAAKjC,cAGT,IAAIkC,EAAW,GASf,OARID,KAAKlC,MAAMoC,UACPF,KAAKlC,MAAMoC,SAASX,OAChBS,KAAKlC,MAAMoC,SAASX,MAAMY,QAC1BF,EAAWD,KAAKlC,MAAMoC,SAASX,MAAMY,OAM7C,6BACI,yBAAKX,UAAU,YACVS,EAASnB,OAAS,EAAI,6BAAMmB,EAAS,6BAAM,kBAAC,IAAD,CAAMR,GAAG,KAAT,YACtC,kBAAC,IAAD,CAAMA,GAAG,UAAT,UAEV,yBAAKD,UAAU,QAAf,mCACoC,6BADpC,yCAE0C,6BAF1C,8BAGKQ,KAAKH,a,GA/EPO,IAAMC,YC+CVC,G,wDA7CX,WAAYxC,GAAQ,IAAD,8BACf,cAAMA,IAOVyC,SAAW,SAACC,GACL,EAAKjB,MAAMkB,KAAKC,OAAO5B,OAAS,GAC/B,EAAKK,SAAS,CAACwB,UAAU,IAE7BH,EAAMI,kBAZS,EAenBC,YAAc,SAACL,GACX,IAAMM,EAAQN,EAAMO,OAAOD,MAC3B,EAAK3B,SAAS,CAACsB,KAAMK,KAfrB,EAAKvB,MAAQ,CACTkB,KAAM,GACNE,UAAU,GAJC,E,qDAsBf,IAAIK,EAAO,CAACC,SAAU,IAAK1B,MAAO,CAACY,MAAOH,KAAKT,MAAMkB,OAErD,OAAIT,KAAKT,MAAMoB,SAEP,kBAAC,IAAD,CAAUlB,GAAIuB,IAKd,0BAAMxB,UAAU,WAAWe,SAAUP,KAAKO,UACtC,4CACA,2BAAOO,MAAOd,KAAKT,MAAMkB,KACrBS,KAAK,OACLjC,KAAK,WACLkC,SAAUnB,KAAKa,cACV,6BACT,4BAAQK,KAAK,UAAb,c,GAxCAd,IAAMC,YCaXe,G,6KAbF,IACGC,EAAUrB,KAAKlC,MAAfuD,MACR,OACI,6BACI,6BACKA,EAAMC,KAAK,6BACZ,yBAAK1B,IAAI,GAAGF,IAAK2B,EAAME,c,GARvBnB,IAAMC,YCuIXmB,E,kDAjIX,WAAY1D,GAAO,IAAD,8BACd,cAAMA,IAYV2D,MAAQ,WACJ,IAAIC,EAAQ,EAAKnC,MAAMoC,OACnBC,EAAO,EAAKrC,MAAMsC,QACtBD,EAAKF,GAAS,EACd,EAAKvC,SAAS,CAAC2C,OAAQF,IACpB,EAAKrC,MAAMoC,OAAS,EAAKpC,MAAMwC,QAAQjD,QACtC,EAAKK,SAAS,CAACwC,OAAQ,EAAKpC,MAAMoC,OAAO,KAnB/B,EAuBlBK,MAAQ,WACJ,IAAIN,EAAQ,EAAKnC,MAAMoC,OACnBC,EAAO,EAAKrC,MAAMsC,QACtBD,EAAKF,GAAS,EACd,EAAKvC,SAAS,CAAC2C,OAAQF,IACpB,EAAKrC,MAAMoC,OAAS,EAAKpC,MAAMwC,QAAQjD,QACtC,EAAKK,SAAS,CAACwC,OAAQ,EAAKpC,MAAMoC,OAAO,KA7B/B,EAiClB9B,KAAO,WACH,IAAIoC,EAAgB,EAAK1C,MAAM2C,YADtB,EAEiB,EAAK3C,MAAxBwC,EAFE,EAEFA,QAASJ,EAFP,EAEOA,OAChB,OACI,yBAAKnC,UAAU,WAEX,yBAAKA,UAAU,WACX,4BAAQA,UAAU,UAAU2C,QAAS,EAAKV,OACrCQ,EAAc,EAAqB,EAAlB,EAAK1C,MAAMoC,SACjC,4BAAQnC,UAAU,UAAU2C,QAAS,EAAKH,OACrCC,EAAc,EAAqB,EAAlB,EAAK1C,MAAMoC,SACjC,4BAAQnC,UAAU,UAAU2C,QAAS,EAAKV,OACrCQ,EAAc,EAAqB,EAAlB,EAAK1C,MAAMoC,UAEpCI,EAAQjD,OAAS,EAClB,yBAAKU,UAAU,SACX,kBAAC,EAAD,CAAO6B,MAAOU,EAAQJ,MACjB,GAbb,MArCU,EAuDlBS,cAAgB,SAAC3D,GACI,KAAdA,EAAE4D,SAAkB,EAAK9C,MAAMoC,OAAS,GAAK,EAAKpC,MAAMoC,OAAS,EAAKpC,MAAMwC,QAAQjD,OAAO,GAC1F,EAAKK,SAAS,CAACwC,OAAQ,EAAKpC,MAAMoC,OAAO,IAE5B,KAAdlD,EAAE4D,SAAkB,EAAK9C,MAAMoC,OAAS,GACvC,EAAKxC,SAAS,CAACwC,OAAQ,EAAKpC,MAAMoC,OAAO,KA5D/B,EAgElBW,QAAU,WACN,EAAKnD,SAAS,CAACwC,OAAQ,IAEvB,EAAKxC,SAAS,CAAC0C,QADJ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,KAEtB,EAAK1C,SAAS,CAACoD,OAAO,IACtB,EAAKpD,SAAS,CAACqD,OAAO,KArER,EAwElBC,YAAc,WACV,IAAIzE,EAAM,wDACVC,MAAMD,GAAKE,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,MAAK,SAAAG,GAAG,OAAIC,QAAQC,IAAIF,MAAMG,OAAM,SAAAC,GAAC,OAAIH,QAAQC,IAAIE,MACpFR,MAAMD,GAAKE,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,MAAK,SAAAG,GAMhC,IALA,IAAIqE,EACApB,EAEArC,EADA0D,EAAU,GAEVlE,EAAI,GACAI,EAAE,EAAEA,EAAER,EAAI,GAAGS,OAAOD,IACxB,GAAgB,MAAbR,EAAI,GAAGQ,GAAW,CACjBI,EAAOZ,EAAI,GAAGQ,GAAGiD,OACjBY,EAAOrE,EAAI,GAAGQ,GAAG+D,QACjBtB,EAAOjD,EAAI,GAAGQ,GAAGyC,KACjB,IAAI,IAAIuB,EAAE,EAAEA,EAAE,EAAEA,IACZF,EAAQ5D,KAAKV,EAAI,GAAGQ,GAAGiE,QAAQD,IAEnC,IAAItB,EAAQ5B,qBAAkC+C,EAC9CjE,EAAEM,KAAK,CAACE,OAAKsC,QAAMD,SAG3B,EAAKnC,SAAS,CAAC4C,QAAStD,IACxB,EAAKU,SAAS,CAAC+C,YAAaS,OAC7BnE,OAAM,SAAAC,GAAC,OAAIH,QAAQC,IAAIE,MAC1B,EAAKU,SAAS,CAACC,MAAM,KA9FrB,EAAKG,MAAQ,CACTH,MAAM,EACN2D,IAAK,GACLb,YAAY,GACZH,QAAS,GACTJ,OAAQ,EACRqB,MAAO,EACPnB,QAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IATV,E,qDAqGX7B,KAAKT,MAAMH,MACVY,KAAKyC,cAGT,IAAIQ,EAIJ,OAFAA,EAAQjD,KAAKT,MAAMsC,QAAQ,GAAG7B,KAAKT,MAAMsC,QAAQ,GAAG7B,KAAKT,MAAMsC,QAAQ,GAAG7B,KAAKT,MAAMsC,QAAQ,GAAG7B,KAAKT,MAAMsC,QAAQ,GAAG7B,KAAKT,MAAMsC,QAAQ,GAGrI,6BACI,yBAAKrC,UAAU,YACX,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAEJ,yBAAKD,UAAU,WAAf,cACA,6BADA,gCAEA,6BAFA,8BAGA,6BAHA,gCAIA,6BAJA,6CAKA,6BAAK,6BAAK,6BAAK,8BAEf,yBAAKA,UAAU,WACVQ,KAAKT,MAAMoC,OAAS,EAAI,6BAAM3B,KAAKH,QAC9B,6BAAM,eAAeoD,EAAM,KAAK,6BAAK,4BAAQd,QAASnC,KAAKsC,SAAtB,gB,GA7H3ClC,IAAMC,WCmIX6C,E,kDAjIX,WAAYpF,GAAO,IAAD,8BACd,cAAMA,IAYV2D,MAAQ,WACJ,IAAIC,EAAQ,EAAKnC,MAAMoC,OACnBC,EAAO,EAAKrC,MAAMsC,QACtBD,EAAKF,GAAS,EACd,EAAKvC,SAAS,CAAC2C,OAAQF,IACpB,EAAKrC,MAAMoC,OAAS,EAAKpC,MAAMwC,QAAQjD,QACtC,EAAKK,SAAS,CAACwC,OAAQ,EAAKpC,MAAMoC,OAAO,KAnB/B,EAuBlBK,MAAQ,WACJ,IAAIN,EAAQ,EAAKnC,MAAMoC,OACnBC,EAAO,EAAKrC,MAAMsC,QACtBD,EAAKF,GAAS,EACd,EAAKvC,SAAS,CAAC2C,OAAQF,IACpB,EAAKrC,MAAMoC,OAAS,EAAKpC,MAAMwC,QAAQjD,QACtC,EAAKK,SAAS,CAACwC,OAAQ,EAAKpC,MAAMoC,OAAO,KA7B/B,EAiClB9B,KAAO,WACH,IAAIoC,EAAgB,EAAK1C,MAAM2C,YADtB,EAEiB,EAAK3C,MAAxBwC,EAFE,EAEFA,QAASJ,EAFP,EAEOA,OAChB,OACI,yBAAKnC,UAAU,WAEX,yBAAKA,UAAU,WACX,4BAAQA,UAAU,UAAU2C,QAAS,EAAKV,OACrCQ,EAAc,EAAqB,EAAlB,EAAK1C,MAAMoC,SACjC,4BAAQnC,UAAU,UAAU2C,QAAS,EAAKH,OACrCC,EAAc,EAAqB,EAAlB,EAAK1C,MAAMoC,SACjC,4BAAQnC,UAAU,UAAU2C,QAAS,EAAKV,OACrCQ,EAAc,EAAqB,EAAlB,EAAK1C,MAAMoC,UAEpCI,EAAQjD,OAAS,EAClB,yBAAKU,UAAU,SACX,kBAAC,EAAD,CAAO6B,MAAOU,EAAQJ,MACjB,GAbb,MArCU,EAuDlBS,cAAgB,SAAC3D,GACI,KAAdA,EAAE4D,SAAkB,EAAK9C,MAAMoC,OAAS,GAAK,EAAKpC,MAAMoC,OAAS,EAAKpC,MAAMwC,QAAQjD,OAAO,GAC1F,EAAKK,SAAS,CAACwC,OAAQ,EAAKpC,MAAMoC,OAAO,IAE5B,KAAdlD,EAAE4D,SAAkB,EAAK9C,MAAMoC,OAAS,GACvC,EAAKxC,SAAS,CAACwC,OAAQ,EAAKpC,MAAMoC,OAAO,KA5D/B,EAgElBW,QAAU,WACN,EAAKnD,SAAS,CAACwC,OAAQ,IAEvB,EAAKxC,SAAS,CAAC0C,QADJ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,KAEtB,EAAK1C,SAAS,CAACoD,OAAO,IACtB,EAAKpD,SAAS,CAACqD,OAAO,KArER,EAwElBC,YAAc,WACV,IAAIzE,EAAM,wDACVC,MAAMD,GAAKE,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,MAAK,SAAAG,GAAG,OAAIC,QAAQC,IAAIF,MAAMG,OAAM,SAAAC,GAAC,OAAIH,QAAQC,IAAIE,MACpFR,MAAMD,GAAKE,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,MAAK,SAAAG,GAMhC,IALA,IAAIqE,EACApB,EAEArC,EADA0D,EAAU,GAEVlE,EAAI,GACAI,EAAE,EAAEA,EAAER,EAAI,GAAGS,OAAOD,IACxB,GAAgB,MAAbR,EAAI,GAAGQ,GAAW,CACjBI,EAAOZ,EAAI,GAAGQ,GAAGiD,OACjBY,EAAOrE,EAAI,GAAGQ,GAAG+D,QACjBtB,EAAOjD,EAAI,GAAGQ,GAAGyC,KACjB,IAAI,IAAIuB,EAAE,EAAEA,EAAE,EAAEA,IACZF,EAAQ5D,KAAKV,EAAI,GAAGQ,GAAGiE,QAAQD,IAEnC,IAAItB,EAAQ5B,qBAAkC+C,EAC9CjE,EAAEM,KAAK,CAACE,OAAKsC,QAAMD,SAG3B,EAAKnC,SAAS,CAAC4C,QAAStD,IACxB,EAAKU,SAAS,CAAC+C,YAAaS,OAC7BnE,OAAM,SAAAC,GAAC,OAAIH,QAAQC,IAAIE,MAC1B,EAAKU,SAAS,CAACC,MAAM,KA9FrB,EAAKG,MAAQ,CACTH,MAAM,EACN2D,IAAK,GACLb,YAAY,GACZH,QAAS,GACTJ,OAAQ,EACRqB,MAAO,EACPnB,QAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IATV,E,qDAqGX7B,KAAKT,MAAMH,MACVY,KAAKyC,cAGT,IAAIQ,EAIJ,OAFAA,EAAQjD,KAAKT,MAAMsC,QAAQ,GAAG7B,KAAKT,MAAMsC,QAAQ,GAAG7B,KAAKT,MAAMsC,QAAQ,GAAG7B,KAAKT,MAAMsC,QAAQ,GAAG7B,KAAKT,MAAMsC,QAAQ,GAAG7B,KAAKT,MAAMsC,QAAQ,GAGrI,6BACI,yBAAKrC,UAAU,YACX,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAEJ,yBAAKD,UAAU,WAAf,cACA,6BADA,gCAEA,6BAFA,8BAGA,6BAHA,gCAIA,6BAJA,6CAKA,6BAAK,6BAAK,6BAAK,8BAEf,yBAAKA,UAAU,WACVQ,KAAKT,MAAMoC,OAAS,EAAI,6BAAM3B,KAAKH,QAC9B,6BAAM,eAAeoD,EAAM,KAAK,6BAAK,4BAAQd,QAASnC,KAAKsC,SAAtB,gB,GA7H3ClC,IAAMC,WC4IX8C,E,kDA1IX,WAAYrF,GAAO,IAAD,8BACd,cAAMA,IAYV2D,MAAQ,WACJ,IAAIC,EAAQ,EAAKnC,MAAMoC,OACnBC,EAAO,EAAKrC,MAAMsC,QACtBD,EAAKF,GAAS,EACd,EAAKvC,SAAS,CAAC2C,OAAQF,IACpB,EAAKrC,MAAMoC,OAAS,EAAKpC,MAAMwC,QAAQjD,QACtC,EAAKK,SAAS,CAACwC,OAAQ,EAAKpC,MAAMoC,OAAO,KAnB/B,EAuBlBK,MAAQ,WACJ,IAAIN,EAAQ,EAAKnC,MAAMoC,OACnBC,EAAO,EAAKrC,MAAMsC,QACtBD,EAAKF,GAAS,EACd,EAAKvC,SAAS,CAAC2C,OAAQF,IACpB,EAAKrC,MAAMoC,OAAS,EAAKpC,MAAMwC,QAAQjD,QACtC,EAAKK,SAAS,CAACwC,OAAQ,EAAKpC,MAAMoC,OAAO,KA7B/B,EAiClB9B,KAAO,WACH,IAAIoC,EAAgB,EAAK1C,MAAM2C,YADtB,EAEiB,EAAK3C,MAAxBwC,EAFE,EAEFA,QAASJ,EAFP,EAEOA,OAChB,OACI,yBAAKnC,UAAU,WAEX,yBAAKA,UAAU,WACX,4BAAQA,UAAU,UAAU2C,QAAS,EAAKV,OACrCQ,EAAc,EAAqB,EAAlB,EAAK1C,MAAMoC,SACjC,4BAAQnC,UAAU,UAAU2C,QAAS,EAAKV,OACrCQ,EAAc,EAAqB,EAAlB,EAAK1C,MAAMoC,SACjC,4BAAQnC,UAAU,UAAU2C,QAAS,EAAKH,OACrCC,EAAc,EAAqB,EAAlB,EAAK1C,MAAMoC,UAEpCI,EAAQjD,OAAS,EAClB,yBAAKU,UAAU,SACX,kBAAC,EAAD,CAAO6B,MAAOU,EAAQJ,MACjB,GAbb,MArCU,EAuDlBS,cAAgB,SAAC3D,GACI,KAAdA,EAAE4D,SAAkB,EAAK9C,MAAMoC,OAAS,GAAK,EAAKpC,MAAMoC,OAAS,EAAKpC,MAAMwC,QAAQjD,OAAO,GAC1F,EAAKK,SAAS,CAACwC,OAAQ,EAAKpC,MAAMoC,OAAO,IAE5B,KAAdlD,EAAE4D,SAAkB,EAAK9C,MAAMoC,OAAS,GACvC,EAAKxC,SAAS,CAACwC,OAAQ,EAAKpC,MAAMoC,OAAO,KA5D/B,EAgElBW,QAAU,WAEN,IACIc,EAAO,CAACpE,GAAI,EAAKO,MAAMwD,IAAKC,MAAO,EAAKzD,MAAMyD,OAClD/E,MAFU,oDAEC,CACPoF,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBzD,KAAM0D,KAAKC,UAAUJ,KACtBlF,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,MAAK,SAAAuF,GAAC,OAAInF,QAAQC,IAAIkF,MAAIjF,OAAM,SAAAC,GAAC,OAAIH,QAAQC,IAAIE,MAExE,EAAKU,SAAS,CAACwC,OAAQ,IAEvB,EAAKxC,SAAS,CAAC0C,QADJ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,KAEtB,EAAK1C,SAAS,CAACC,MAAM,KA/EP,EAkFlBqD,YAAc,WACV,IAAIzE,EAAM,wDACVC,MAAMD,GAAKE,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,MAAK,SAAAG,GAAG,OAAIC,QAAQC,IAAIF,MAAMG,OAAM,SAAAC,GAAC,OAAIH,QAAQC,IAAIE,MACpFR,MAAMD,GAAKE,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,MAAK,SAAAG,GAMhC,IALA,IAAIqE,EACApB,EAEArC,EADA0D,EAAU,GAEVlE,EAAI,GACAI,EAAE,EAAEA,EAAER,EAAI,GAAGS,OAAOD,IACxB,GAAgB,MAAbR,EAAI,GAAGQ,GAAW,CACjBI,EAAOZ,EAAI,GAAGQ,GAAGiD,OACjBY,EAAOrE,EAAI,GAAGQ,GAAG+D,QACjBtB,EAAOjD,EAAI,GAAGQ,GAAGyC,KACjB,IAAI,IAAIuB,EAAE,EAAEA,EAAE,EAAEA,IACZF,EAAQ5D,KAAKV,EAAI,GAAGQ,GAAGiE,QAAQD,IAEnC,IAAItB,EAAQ5B,qBAAkC+C,EAC9CjE,EAAEM,KAAK,CAACE,OAAKsC,QAAMD,SAG3B,EAAKnC,SAAS,CAAC4C,QAAStD,IACxB,EAAKU,SAAS,CAAC+C,YAAaS,OAC7BnE,OAAM,SAAAC,GAAC,OAAIH,QAAQC,IAAIE,MAC1B,EAAKU,SAAS,CAACC,MAAM,KAxGrB,EAAKG,MAAQ,CACTH,MAAM,EACN2D,IAAK,GACLb,YAAY,GACZH,QAAS,GACTJ,OAAQ,EACRqB,MAAO,EACPnB,QAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IATV,E,qDA8GX7B,KAAKT,MAAMH,MACVY,KAAKyC,cAGT,IAAIQ,EAIJ,OAFAA,EAAQjD,KAAKT,MAAMsC,QAAQ,GAAG7B,KAAKT,MAAMsC,QAAQ,GAAG7B,KAAKT,MAAMsC,QAAQ,GAAG7B,KAAKT,MAAMsC,QAAQ,GAAG7B,KAAKT,MAAMsC,QAAQ,GAAG7B,KAAKT,MAAMsC,QAAQ,GAGrI,6BACI,yBAAKrC,UAAU,YACX,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAEJ,yBAAKD,UAAU,WAAf,cACA,6BADA,gCAEA,6BAFA,8BAGA,6BAHA,gCAIA,6BAJA,6CAKA,6BAAK,6BAAK,6BAAK,8BAEf,yBAAKA,UAAU,WACVQ,KAAKT,MAAMoC,OAAS,EAAI,6BAAM3B,KAAKH,QAC9B,6BAAM,eAAeoD,EAAM,KAAK,6BAAK,4BAAQd,QAASnC,KAAKsC,SAAtB,gB,GAtI3ClC,IAAMC,WC+BXqD,MAvBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,IAAIC,OAAQ,SAAA9F,GAAK,OAAI,kBAAC,EAASA,SClB/B+F,QACW,cAA7BC,OAAO5D,SAAS6D,UAEe,UAA7BD,OAAO5D,SAAS6D,UAEhBD,OAAO5D,SAAS6D,SAASC,MACvB,2DCZNC,IAASL,OACP,kBAAC,IAAMM,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrG,MAAK,SAAAsG,GACJA,EAAaC,gBAEdjG,OAAM,SAAAkG,GACLpG,QAAQoG,MAAMA,EAAMC,c","file":"static/js/main.0989f9a8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Home.css';\r\nimport { Link } from \"react-router-dom\"\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            load: true,\r\n            id: 0,\r\n            pic: \"\",\r\n            name: \"\",\r\n            scores: [],\r\n        };\r\n    }\r\n\r\n    getMetaData = () => {\r\n        let api = 'https://jasontbaker-imagequiz.herokuapp.com/quizzes';\r\n        fetch(api).then(x => x.json()).then(out => console.log(out)).catch(e => console.log(e));\r\n        fetch(api).then(x => x.json()).then(out => {\r\n            console.log(out);\r\n            let q = [];\r\n            let n = [];\r\n            let p = [];\r\n            for(let i=0;i<out.length;i++){    \r\n                q.push(out[i].id);\r\n                n.push(out[i].name);\r\n                p.push(out[i].pic);\r\n            }\r\n            this.setState({id: q});\r\n            this.setState({name: n});\r\n            this.setState({pic: p});\r\n        }).catch(e => console.log(e));\r\n        this.setState({load: false});\r\n    }\r\n\r\n    drawPics = (id) => {\r\n        let title = \"/Quiz\"+this.state.id[id];\r\n        console.log(title);\r\n        return (\r\n            <div className=\"imagediv\">\r\n                <Link to={title}>\r\n                    <img className=\"image\" src={process.env.PUBLIC_URL + \"/images/\" + this.state.pic[id]} alt=\"\" />\r\n                    <br/>\r\n                    {this.state.name[id]}\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    body = () => {\r\n        let t = [];\r\n        for(let i=0;i<this.state.name.length;i++){\r\n            t.push(this.drawPics(i));\r\n        }\r\n        return t;\r\n    }\r\n\r\n    render() {\r\n\r\n        if(this.state.load){\r\n            this.getMetaData();\r\n        }\r\n\r\n        let username = '';\r\n        if (this.props.location) {\r\n            if (this.props.location.state) {\r\n                if (this.props.location.state.userN) {\r\n                    username = this.props.location.state.userN;\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"TopRight\">\r\n                    {username.length > 0 ? <div>{username}<br /><Link to=\"/\"> Logout</Link></div>\r\n                        : <Link to='/login'>Login</Link>}\r\n                </div>\r\n                <div className=\"Pics\">\r\n                    Here are the quizes from server:<br/>\r\n                    Hitting \"retry\" at the end of the quiz<br/> will send scores to server\r\n                    {this.body()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './Login.css';\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: \"\",\r\n            userGood: false\r\n        }\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        if(this.state.user.trim().length > 0){\r\n            this.setState({userGood: true});\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    whenChanged = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({user: value});\r\n    }\r\n\r\n\r\n    render(){\r\n        let from = {pathname: '/', state: {userN: this.state.user}}\r\n\r\n        if (this.state.userGood) {\r\n            return(\r\n                <Redirect to={from} />\r\n            );\r\n\r\n        } else {\r\n            return (\r\n                <form className=\"TopRight\" onSubmit={this.onSubmit}>\r\n                    <label>Username:</label>\r\n                    <input value={this.state.user}\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        onChange={this.whenChanged}\r\n                    ></input><br></br>\r\n                    <button type=\"submit\">Login</button>\r\n                </form>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login","import React from 'react';\r\n\r\nclass Entry extends React.Component {\r\n\r\n    render(){\r\n        const { entry } = this.props;\r\n        return(\r\n            <div>\r\n                <div>\r\n                    {entry.page}<br/>\r\n                    <img alt='' src={entry.image}></img>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Entry;","import React from 'react';\r\nimport './Quiz.css';\r\nimport { Link } from \"react-router-dom\";\r\n//import Server from '../ServerInterface/Server';\r\nimport Entry from './Entry';\r\n\r\nclass Quiz2 extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            load: true,\r\n            qid: [],\r\n            questchoice:[],\r\n            entries: [],\r\n            cursor: 0,\r\n            score: 0,\r\n            answers: [0,0,0,0,0,0]\r\n        };\r\n    }\r\n\r\n    wrong = () =>{\r\n        let count = this.state.cursor;\r\n        let temp = this.state.answers;\r\n        temp[count] = 0\r\n        this.setState({answer: temp});\r\n        if(this.state.cursor < this.state.entries.length){\r\n            this.setState({cursor: this.state.cursor+1});\r\n        }\r\n    }\r\n\r\n    right = () =>{\r\n        let count = this.state.cursor;\r\n        let temp = this.state.answers;\r\n        temp[count] = 1\r\n        this.setState({answer: temp});\r\n        if(this.state.cursor < this.state.entries.length){\r\n            this.setState({cursor: this.state.cursor+1});\r\n        }\r\n    }\r\n\r\n    body = () => {\r\n        let questionNames = this.state.questchoice;\r\n        const {entries, cursor} = this.state;\r\n        return(\r\n            <div className=\"Content\">\r\n                \r\n                <div className=\"Content\">\r\n                    <button className='buttons' onClick={this.wrong}>\r\n                        {questionNames[0+(this.state.cursor*3)]}</button>\r\n                    <button className='buttons' onClick={this.right}>\r\n                        {questionNames[1+(this.state.cursor*3)]}</button>\r\n                    <button className='buttons' onClick={this.wrong}>\r\n                        {questionNames[2+(this.state.cursor*3)]}</button>\r\n                </div>\r\n                {entries.length > 0 ? \r\n                <div className=\"entry\">\r\n                    <Entry entry={entries[cursor]}/>\r\n                </div> : ''};\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        if(e.keyCode === 39 && this.state.cursor < 5 && this.state.cursor < this.state.entries.length-1){//right\r\n            this.setState({cursor: this.state.cursor+1});\r\n        }\r\n        if(e.keyCode === 37 && this.state.cursor > 0){//left\r\n            this.setState({cursor: this.state.cursor-1});\r\n        }\r\n    }\r\n\r\n    restart = () =>{\r\n        this.setState({cursor: 0});\r\n        let temp = [0,0,0,0,0,0]\r\n        this.setState({answers: temp});\r\n        this.setState({load1: true});\r\n        this.setState({load2: true});\r\n    }\r\n\r\n    getQuizData = () => {\r\n        let api = 'https://jasontbaker-imagequiz.herokuapp.com/quizzes/2';\r\n        fetch(api).then(x => x.json()).then(out => console.log(out)).catch(e => console.log(e));\r\n        fetch(api).then(x => x.json()).then(out => {\r\n            let qpic;\r\n            let page;\r\n            let qchoice = [];\r\n            let name;\r\n            let e = [];\r\n            for(let i=0;i<out[1].length;i++){    \r\n                if(out[1][i] != null){\r\n                    name = out[1][i].answer;\r\n                    qpic = out[1][i].picture;\r\n                    page = out[1][i].page;\r\n                    for(let j=0;j<3;j++){\r\n                        qchoice.push(out[1][i].choices[j]);\r\n                    }\r\n                    let image = process.env.PUBLIC_URL+\"/images/\"+qpic;\r\n                    e.push({name,image,page});\r\n                }\r\n            }\r\n            this.setState({entries: e});\r\n            this.setState({questchoice: qchoice});\r\n        }).catch(e => console.log(e));\r\n        this.setState({load: false});\r\n    }\r\n\r\n    render() {\r\n\r\n        if(this.state.load){\r\n            this.getQuizData();\r\n        }\r\n\r\n        var total = 0;\r\n        //console.log(this.state.answers);\r\n        total = this.state.answers[0]+this.state.answers[1]+this.state.answers[2]+this.state.answers[3]+this.state.answers[4]+this.state.answers[5];\r\n        //console.log(total);\r\n        return (\r\n            <div>\r\n                <div className=\"TopRight\">\r\n                    <Link to=\"/\">Home</Link>\r\n                </div>\r\n                <div className=\"Content\">Hello to Q2\r\n                <br/>Hit right arrow to move right\r\n                <br/>Hit left arrow to move left\r\n                <br/>Choosing answer moves forward\r\n                <br/>The last question page (6/6) submits score\r\n                <br/><br/><br/><br/>\r\n                </div>\r\n                <div className=\"Content\">\r\n                    {this.state.cursor < 6 ? <div>{this.body()}</div>\r\n                        : <div>{\"Your Score: \"+total+\"/6\"}<br/><button onClick={this.restart}>Retry</button></div>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Quiz2","import React from 'react';\r\nimport './Quiz.css';\r\nimport { Link } from \"react-router-dom\";\r\n//import Server from '../ServerInterface/Server';\r\nimport Entry from './Entry';\r\n\r\nclass Quiz3 extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            load: true,\r\n            qid: [],\r\n            questchoice:[],\r\n            entries: [],\r\n            cursor: 0,\r\n            score: 0,\r\n            answers: [0,0,0,0,0,0]\r\n        };\r\n    }\r\n\r\n    wrong = () =>{\r\n        let count = this.state.cursor;\r\n        let temp = this.state.answers;\r\n        temp[count] = 0\r\n        this.setState({answer: temp});\r\n        if(this.state.cursor < this.state.entries.length){\r\n            this.setState({cursor: this.state.cursor+1});\r\n        }\r\n    }\r\n\r\n    right = () =>{\r\n        let count = this.state.cursor;\r\n        let temp = this.state.answers;\r\n        temp[count] = 1\r\n        this.setState({answer: temp});\r\n        if(this.state.cursor < this.state.entries.length){\r\n            this.setState({cursor: this.state.cursor+1});\r\n        }\r\n    }\r\n\r\n    body = () => {\r\n        let questionNames = this.state.questchoice;\r\n        const {entries, cursor} = this.state;\r\n        return(\r\n            <div className=\"Content\">\r\n                \r\n                <div className=\"Content\">\r\n                    <button className='buttons' onClick={this.wrong}>\r\n                        {questionNames[0+(this.state.cursor*3)]}</button>\r\n                    <button className='buttons' onClick={this.right}>\r\n                        {questionNames[1+(this.state.cursor*3)]}</button>\r\n                    <button className='buttons' onClick={this.wrong}>\r\n                        {questionNames[2+(this.state.cursor*3)]}</button>\r\n                </div>\r\n                {entries.length > 0 ? \r\n                <div className=\"entry\">\r\n                    <Entry entry={entries[cursor]}/>\r\n                </div> : ''};\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        if(e.keyCode === 39 && this.state.cursor < 5 && this.state.cursor < this.state.entries.length-1){//right\r\n            this.setState({cursor: this.state.cursor+1});\r\n        }\r\n        if(e.keyCode === 37 && this.state.cursor > 0){//left\r\n            this.setState({cursor: this.state.cursor-1});\r\n        }\r\n    }\r\n\r\n    restart = () =>{\r\n        this.setState({cursor: 0});\r\n        let temp = [0,0,0,0,0,0]\r\n        this.setState({answers: temp});\r\n        this.setState({load1: true});\r\n        this.setState({load2: true});\r\n    }\r\n\r\n    getQuizData = () => {\r\n        let api = 'https://jasontbaker-imagequiz.herokuapp.com/quizzes/3';\r\n        fetch(api).then(x => x.json()).then(out => console.log(out)).catch(e => console.log(e));\r\n        fetch(api).then(x => x.json()).then(out => {\r\n            let qpic;\r\n            let page;\r\n            let qchoice = [];\r\n            let name;\r\n            let e = [];\r\n            for(let i=0;i<out[2].length;i++){    \r\n                if(out[2][i] != null){\r\n                    name = out[2][i].answer;\r\n                    qpic = out[2][i].picture;\r\n                    page = out[2][i].page;\r\n                    for(let j=0;j<3;j++){\r\n                        qchoice.push(out[2][i].choices[j]);\r\n                    }\r\n                    let image = process.env.PUBLIC_URL+\"/images/\"+qpic;\r\n                    e.push({name,image,page});\r\n                }\r\n            }\r\n            this.setState({entries: e});\r\n            this.setState({questchoice: qchoice});\r\n        }).catch(e => console.log(e));\r\n        this.setState({load: false});\r\n    }\r\n\r\n    render() {\r\n\r\n        if(this.state.load){\r\n            this.getQuizData();\r\n        }\r\n\r\n        var total = 0;\r\n        //console.log(this.state.answers);\r\n        total = this.state.answers[0]+this.state.answers[1]+this.state.answers[2]+this.state.answers[3]+this.state.answers[4]+this.state.answers[5];\r\n        //console.log(total);\r\n        return (\r\n            <div>\r\n                <div className=\"TopRight\">\r\n                    <Link to=\"/\">Home</Link>\r\n                </div>\r\n                <div className=\"Content\">Hello to Q3\r\n                <br/>Hit right arrow to move right\r\n                <br/>Hit left arrow to move left\r\n                <br/>Choosing answer moves forward\r\n                <br/>The last question page (6/6) submits score\r\n                <br/><br/><br/><br/>\r\n                </div>\r\n                <div className=\"Content\">\r\n                    {this.state.cursor < 6 ? <div>{this.body()}</div>\r\n                        : <div>{\"Your Score: \"+total+\"/6\"}<br/><button onClick={this.restart}>Retry</button></div>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Quiz3","import React from 'react';\r\nimport './Quiz.css';\r\nimport { Link } from \"react-router-dom\";\r\n//import Server from '../ServerInterface/Server';\r\nimport Entry from './Entry';\r\n\r\nclass Quiz1 extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            load: true,\r\n            qid: [],\r\n            questchoice:[],\r\n            entries: [],\r\n            cursor: 0,\r\n            score: 0,\r\n            answers: [0,0,0,0,0,0]\r\n        };\r\n    }\r\n\r\n    wrong = () =>{\r\n        let count = this.state.cursor;\r\n        let temp = this.state.answers;\r\n        temp[count] = 0\r\n        this.setState({answer: temp});\r\n        if(this.state.cursor < this.state.entries.length){\r\n            this.setState({cursor: this.state.cursor+1});\r\n        }\r\n    }\r\n\r\n    right = () =>{\r\n        let count = this.state.cursor;\r\n        let temp = this.state.answers;\r\n        temp[count] = 1\r\n        this.setState({answer: temp});\r\n        if(this.state.cursor < this.state.entries.length){\r\n            this.setState({cursor: this.state.cursor+1});\r\n        }\r\n    }\r\n\r\n    body = () => {\r\n        let questionNames = this.state.questchoice;\r\n        const {entries, cursor} = this.state;\r\n        return(\r\n            <div className=\"Content\">\r\n                \r\n                <div className=\"Content\">\r\n                    <button className='buttons' onClick={this.wrong}>\r\n                        {questionNames[0+(this.state.cursor*3)]}</button>\r\n                    <button className='buttons' onClick={this.wrong}>\r\n                        {questionNames[1+(this.state.cursor*3)]}</button>\r\n                    <button className='buttons' onClick={this.right}>\r\n                        {questionNames[2+(this.state.cursor*3)]}</button>\r\n                </div>\r\n                {entries.length > 0 ? \r\n                <div className=\"entry\">\r\n                    <Entry entry={entries[cursor]}/>\r\n                </div> : ''};\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        if(e.keyCode === 39 && this.state.cursor < 5 && this.state.cursor < this.state.entries.length-1){//right\r\n            this.setState({cursor: this.state.cursor+1});\r\n        }\r\n        if(e.keyCode === 37 && this.state.cursor > 0){//left\r\n            this.setState({cursor: this.state.cursor-1});\r\n        }\r\n    }\r\n\r\n    restart = () =>{\r\n        \r\n        let api = \"https://jasontbaker-imagequiz.herokuapp.com/score\";\r\n        let data = {id: this.state.qid, score: this.state.score};\r\n        fetch(api, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(x => x.json()).then(y => console.log(y)).catch(e => console.log(e));\r\n\r\n        this.setState({cursor: 0});\r\n        let temp = [0,0,0,0,0,0]\r\n        this.setState({answers: temp});\r\n        this.setState({load: true});\r\n    }\r\n\r\n    getQuizData = () => {\r\n        let api = 'https://jasontbaker-imagequiz.herokuapp.com/quizzes/1';\r\n        fetch(api).then(x => x.json()).then(out => console.log(out)).catch(e => console.log(e));\r\n        fetch(api).then(x => x.json()).then(out => {\r\n            let qpic;\r\n            let page;\r\n            let qchoice = [];\r\n            let name;\r\n            let e = [];\r\n            for(let i=0;i<out[0].length;i++){    \r\n                if(out[0][i] != null){\r\n                    name = out[0][i].answer;\r\n                    qpic = out[0][i].picture;\r\n                    page = out[0][i].page;\r\n                    for(let j=0;j<3;j++){\r\n                        qchoice.push(out[0][i].choices[j]);\r\n                    }\r\n                    let image = process.env.PUBLIC_URL+\"/images/\"+qpic;\r\n                    e.push({name,image,page});\r\n                }\r\n            }\r\n            this.setState({entries: e});\r\n            this.setState({questchoice: qchoice});\r\n        }).catch(e => console.log(e));\r\n        this.setState({load: false});\r\n    }\r\n\r\n    render() {\r\n        if(this.state.load){\r\n            this.getQuizData();\r\n        }\r\n\r\n        var total = 0;\r\n        //console.log(this.state.answers);\r\n        total = this.state.answers[0]+this.state.answers[1]+this.state.answers[2]+this.state.answers[3]+this.state.answers[4]+this.state.answers[5];\r\n        //console.log(total);\r\n        return (\r\n            <div>\r\n                <div className=\"TopRight\">\r\n                    <Link to=\"/\">Home</Link>\r\n                </div>\r\n                <div className=\"Content\">Hello to Q1\r\n                <br/>Hit right arrow to move right\r\n                <br/>Hit left arrow to move left\r\n                <br/>Choosing answer moves forward\r\n                <br/>The last question page (6/6) submits score\r\n                <br/><br/><br/><br/>\r\n                </div>\r\n                <div className=\"Content\">\r\n                    {this.state.cursor < 6 ? <div>{this.body()}</div>\r\n                        : <div>{\"Your Score: \"+total+\"/6\"}<br/><button onClick={this.restart}>Retry</button></div>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Quiz1","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n} from \"react-router-dom\"\nimport Home from './Components/Home';\nimport Login from './Components/Login';\nimport Quiz2 from './Components/Quiz2';\nimport Quiz3 from './Components/Quiz3';\nimport Quiz1 from './Components/Quiz1';\n\n//basename={process.env.PUBLIC_URL}\nfunction App() {\n  return (\n    <BrowserRouter >\n      <Switch>\n        <Route path='/login'>\n          <Login />\n        </Route>\n        <Route path='/quiz1'>\n          <Quiz1 />\n        </Route>\n        <Route path='/quiz2'>\n          <Quiz2 />\n        </Route>\n        <Route path='/quiz3'>\n          <Quiz3 />\n        </Route>\n        <Route path='/' render={props => <Home {...props} />}>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}