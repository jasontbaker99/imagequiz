{"version":3,"sources":["Components/Home.js","Components/Login.js","ServerInterface/Entries.js","ServerInterface/Server.js","Components/Entry.js","Components/Quiz2.js","Components/Quiz3.js","Components/Quiz1.js","App.js","serviceWorker.js","index.js"],"names":["Home","Flower","name","pictureName","this","picture","flower","pic","drawPics","f","num","title","className","to","src","process","alt","username","props","location","state","userN","length","React","Component","Login","onSubmit","event","user","trim","setState","userGood","preventDefault","whenChanged","value","target","from","pathname","type","onChange","Entries","image","page","Server","fetchEntries","entries","Entry","entry","Quiz2","wrong","count","cursor","temp","answers","answer","right","body","questionNames","onClick","handleKeyDown","e","keyCode","score","window","addEventListener","removeEventListener","total","console","log","Quiz3","Quiz1","App","path","render","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c859cb8f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Home.css';\r\nimport { Link } from \"react-router-dom\"\r\n\r\nclass Home extends React.Component {\r\n\r\n    render() {\r\n\r\n        class Flower {\r\n            constructor(name, pictureName) {\r\n                this.name = name;\r\n                this.picture = pictureName;\r\n            }\r\n        }\r\n\r\n        let flower = new Flower('Flower quiz', 'daffodil.png');\r\n        let mammal = new Flower('Mammal quiz', 'bear.png');\r\n        let bird = new Flower('Bird quiz', 'bird.png');\r\n\r\n        let pic = [\r\n            mammal,\r\n            bird,\r\n            flower,\r\n        ];\r\n\r\n        function drawPics(f,num) {\r\n            //let p = \"../images/\"+f.picture;\r\n            let title = \"/Quiz\"+num;\r\n            return (\r\n                <div className=\"imagediv\">\r\n                    <Link to={title}>\r\n                        <img className=\"image\" src={process.env.PUBLIC_URL + \"/images/\" + f.picture} alt=\"\" />\r\n                        <br/>\r\n                        {f.name}\r\n                    </Link>\r\n                </div>\r\n            );\r\n\r\n       }\r\n\r\n        let username = '';\r\n        if (this.props.location) {\r\n            if (this.props.location.state) {\r\n                if (this.props.location.state.userN) {\r\n                    username = this.props.location.state.userN;\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"TopRight\">\r\n                    {username.length > 0 ? <div>{username}<br /><Link to=\"/\"> Logout</Link></div>\r\n                        : <Link to='/login'>Login</Link>}\r\n                </div>\r\n                <div className=\"Pics\">\r\n                    {drawPics(pic[0],1)}\r\n                    {drawPics(pic[1],2)}\r\n                    {drawPics(pic[2],3)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './Login.css';\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: \"\",\r\n            userGood: false\r\n        }\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        if(this.state.user.trim().length > 0){\r\n            this.setState({userGood: true});\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    whenChanged = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({user: value});\r\n    }\r\n\r\n\r\n    render(){\r\n        let from = {pathname: '/', state: {userN: this.state.user}}\r\n\r\n        if (this.state.userGood) {\r\n            return(\r\n                <Redirect to={from} />\r\n            );\r\n\r\n        } else {\r\n            return (\r\n                <form className=\"TopRight\" onSubmit={this.onSubmit}>\r\n                    <label>Username:</label>\r\n                    <input value={this.state.user}\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        onChange={this.whenChanged}\r\n                    ></input><br></br>\r\n                    <button type=\"submit\">Login</button>\r\n                </form>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login","let Entries = [\r\n    {\r\n        name: 'bear',\r\n        image: process.env.PUBLIC_URL+\"/images/bear.png\",\r\n        page: '1/6'\r\n    },\r\n    {\r\n        name: 'dog',\r\n        image: process.env.PUBLIC_URL+\"/images/dog.png\",\r\n        page: '2/6'\r\n    },\r\n    {\r\n        name: 'fox',\r\n        image: process.env.PUBLIC_URL+\"/images/fox.png\",\r\n        page: '3/6'\r\n    },\r\n    {\r\n        name: 'cat',\r\n        image: process.env.PUBLIC_URL+\"/images/cat.png\",\r\n        page: '4/6'\r\n    },\r\n    {\r\n        name: 'moose',\r\n        image: process.env.PUBLIC_URL+\"/images/moose.png\",\r\n        page: '5/6'\r\n    },\r\n    {\r\n        name: 'mouse',\r\n        image: process.env.PUBLIC_URL+\"/images/mouse.png\",\r\n        page: '6/6'\r\n    },\r\n    {\r\n        name: 'owl',\r\n        image: process.env.PUBLIC_URL+\"/images/owl.png\",\r\n        page: '1/6'\r\n    },\r\n    {\r\n        name: 'eagle',\r\n        image: process.env.PUBLIC_URL+\"/images/eagle.png\",\r\n        page: '2/6'\r\n    },\r\n    {\r\n        name: 'duck',\r\n        image: process.env.PUBLIC_URL+\"/images/duck.png\",\r\n        page: '3/6'\r\n    },\r\n    {\r\n        name: 'penguin',\r\n        image: process.env.PUBLIC_URL+\"/images/penguin.png\",\r\n        page: '4/6'\r\n    },\r\n    {\r\n        name: 'quail',\r\n        image: process.env.PUBLIC_URL+\"/images/quail.png\",\r\n        page: '5/6'\r\n    },\r\n    {\r\n        name: 'chicken',\r\n        image: process.env.PUBLIC_URL+\"/images/chicken.png\",\r\n        page: '6/6'\r\n    },\r\n    {\r\n        name: 'daffodil',\r\n        image: process.env.PUBLIC_URL+\"/images/daffodil.png\",\r\n        page: '1/6'\r\n    },\r\n    {\r\n        name: 'rose',\r\n        image: process.env.PUBLIC_URL+\"/images/rose.png\",\r\n        page: '2/6'\r\n    },\r\n    {\r\n        name: 'tulip',\r\n        image: process.env.PUBLIC_URL+\"/images/tulip.png\",\r\n        page: '3/6'\r\n    },\r\n    {\r\n        name: 'daisy',\r\n        image: process.env.PUBLIC_URL+\"/images/daisy.jpg\",\r\n        page: '4/6'\r\n    },\r\n    {\r\n        name: 'sunflower',\r\n        image: process.env.PUBLIC_URL+\"/images/sunflower.png\",\r\n        page: '5/6'\r\n    },\r\n    {\r\n        name: 'waterlily',\r\n        image: process.env.PUBLIC_URL+\"/images/waterlily.png\",\r\n        page: '6/6'\r\n    },\r\n\r\n]\r\n\r\nexport default Entries;","import entries from './Entries'\r\n\r\nlet fetchEntries = () => {\r\n    //connect to server later\r\n    return entries;\r\n}\r\n\r\nlet Server ={\r\n    fetchEntries//: getEntries\r\n};\r\n\r\nexport default Server;","import React from 'react';\r\n\r\nclass Entry extends React.Component {\r\n\r\n    render(){\r\n        const { entry } = this.props;\r\n        return(\r\n            <div>\r\n                <div>\r\n                    {entry.page}<br/>\r\n                    <img alt='' src={entry.image}></img>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Entry;","import React from 'react';\r\nimport './Quiz.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport Server from '../ServerInterface/Server';\r\nimport Entry from './Entry';\r\n\r\nclass Quiz2 extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            entries: [],\r\n            cursor: 6,\r\n            score: 0,\r\n            answers: [0,0,0,0,0,0,0]\r\n        };\r\n    }\r\n\r\n    wrong = () =>{\r\n        let count = this.state.cursor-6;\r\n        let temp = this.state.answers;\r\n        temp[count] = 0\r\n        this.setState({answer: temp});\r\n        if(this.state.cursor < this.state.entries.length){\r\n            this.setState({cursor: this.state.cursor+1});\r\n        }\r\n    }\r\n\r\n    right = () =>{\r\n        let count = this.state.cursor-6;\r\n        let temp = this.state.answers;\r\n        temp[count] = 1\r\n        this.setState({answer: temp});\r\n        if(this.state.cursor < this.state.entries.length){\r\n            this.setState({cursor: this.state.cursor+1});\r\n        }\r\n    }\r\n\r\n    body = () => {\r\n        let questionNames = [\r\n        \"eagle\",\"owl\",\"penguin\",\"penguin\",\"eagle\",\"owl\",\r\n        \"owl\",\"duck\",\"eagle\",\"eagle\",\"penguin\",\"owl\",\r\n        \"owl\",\"quail\",\"duck\",\"penguin\",\"chicken\",\"eagle\",\r\n        ];\r\n        const {entries, cursor} = this.state;\r\n        return(\r\n            <div className=\"Content\">\r\n                {entries.length > 0 ? \r\n                <div className=\"entry\">\r\n                    <Entry entry={entries[cursor]}/>\r\n                </div> : ''};\r\n                    <button className='buttons' onClick={this.wrong}>\r\n                        {questionNames[0+((this.state.cursor-6)*3)]}</button>\r\n                    <button className='buttons' onClick={this.right}>\r\n                        {questionNames[1+((this.state.cursor-6)*3)]}</button>\r\n                    <button className='buttons' onClick={this.wrong}>\r\n                        {questionNames[2+((this.state.cursor-6)*3)]}</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        const Entries = Server.fetchEntries();\r\n        this.setState({entries: Entries});\r\n        window.addEventListener(\"keydown\", this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        if(e.keyCode === 39 && this.state.cursor < 11 && this.state.cursor < this.state.entries.length-1){//right\r\n            this.setState({cursor: this.state.cursor+1});\r\n        }\r\n        if(e.keyCode === 37 && this.state.cursor > 6){//left\r\n            this.setState({cursor: this.state.cursor-1});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let total = 0;\r\n        console.log(this.state.answers)\r\n        total = this.state.answers[0]+this.state.answers[1]+this.state.answers[2]+this.state.answers[3]+this.state.answers[4]+this.state.answers[5]+this.state.answers[6];\r\n        return (\r\n            <div>\r\n                <div className=\"TopRight\">\r\n                    <Link to=\"/\">Home</Link>\r\n                </div>\r\n                <div className=\"Content\">Hello to Q2\r\n                <br/>Hit right arrow to move right\r\n                <br/>Hit left arrow to move left\r\n                <br/>Choosing answer moves forward\r\n                <br/>The last question page (6/6) submits score\r\n                <br/><br/><br/><br/>\r\n                </div>\r\n                <div className=\"Content\">\r\n                    {this.state.cursor < 12 ? <div>{this.body()}</div>\r\n                        : \"Your Score: \"+total+\"/6\"}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Quiz2","import React from 'react';\r\nimport './Quiz.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport Server from '../ServerInterface/Server';\r\nimport Entry from './Entry';\r\n\r\nclass Quiz3 extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            entries: [],\r\n            cursor: 12,\r\n            score: 0,\r\n            answers: [0,0,0,0,0,0,0]\r\n        };\r\n    }\r\n\r\n    wrong = () =>{\r\n        let count = this.state.cursor-12;\r\n        let temp = this.state.answers;\r\n        temp[count] = 0\r\n        this.setState({answer: temp});\r\n        if(this.state.cursor < this.state.entries.length){\r\n            this.setState({cursor: this.state.cursor+1});\r\n        }\r\n    }\r\n\r\n    right = () =>{\r\n        let count = this.state.cursor-12;\r\n        let temp = this.state.answers;\r\n        temp[count] = 1\r\n        this.setState({answer: temp});\r\n        if(this.state.cursor < this.state.entries.length){\r\n            this.setState({cursor: this.state.cursor+1});\r\n        }\r\n    }\r\n\r\n    body = () => {\r\n        let questionNames = [\r\n        \"daffodil\",\"tulip\",\"sunflower\",\"rose\",\"waterlily\",\"daisy\",\r\n        \"tulip\",\"sunflower\",\"rose\",\"daisy\",\"tulip\",\"waterlily\",\r\n        \"sunflower\",\"daisy\",\"rose\",\"waterlily\",\"tulip\",\"daisy\",\r\n        ];\r\n        const {entries, cursor} = this.state;\r\n        return(\r\n            <div className=\"Content\">\r\n                {entries.length > 0 ? \r\n                <div className=\"entry\">\r\n                    <Entry entry={entries[cursor]}/>\r\n                </div> : ''};\r\n                    <button className='buttons' onClick={this.right}>\r\n                        {questionNames[0+((this.state.cursor-12)*3)]}</button>\r\n                    <button className='buttons' onClick={this.wrong}>\r\n                        {questionNames[1+((this.state.cursor-12)*3)]}</button>\r\n                    <button className='buttons' onClick={this.wrong}>\r\n                        {questionNames[2+((this.state.cursor-12)*3)]}</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        const Entries = Server.fetchEntries();\r\n        this.setState({entries: Entries});\r\n        window.addEventListener(\"keydown\", this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        if(e.keyCode === 39 && this.state.cursor < 17 && this.state.cursor < this.state.entries.length-1){//right\r\n            this.setState({cursor: this.state.cursor+1});\r\n        }\r\n        if(e.keyCode === 37 && this.state.cursor > 12){//left\r\n            this.setState({cursor: this.state.cursor-1});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let total = 0;\r\n        console.log(this.state.answers)\r\n        total = this.state.answers[0]+this.state.answers[1]+this.state.answers[2]+this.state.answers[3]+this.state.answers[4]+this.state.answers[5]+this.state.answers[6];\r\n        return (\r\n            <div>\r\n                <div className=\"TopRight\">\r\n                    <Link to=\"/\">Home</Link>\r\n                </div>\r\n                <div className=\"Content\">Hello to Q3\r\n                <br/>Hit right arrow to move right\r\n                <br/>Hit left arrow to move left\r\n                <br/>Choosing answer moves forward\r\n                <br/>The last question page (6/6) submits score\r\n                <br/><br/><br/><br/>\r\n                </div>\r\n                <div className=\"Content\">\r\n                    {this.state.cursor < 18 ? <div>{this.body()}</div>\r\n                        : \"Your Score: \"+total+\"/6\"}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Quiz3","import React from 'react';\r\nimport './Quiz.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport Server from '../ServerInterface/Server';\r\nimport Entry from './Entry';\r\n\r\nclass Quiz1 extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            entries: [],\r\n            cursor: 0,\r\n            score: 0,\r\n            answers: [0,0,0,0,0,0,0]\r\n        };\r\n    }\r\n\r\n    wrong = () =>{\r\n        let count = this.state.cursor;\r\n        let temp = this.state.answers;\r\n        temp[count] = 0\r\n        this.setState({answer: temp});\r\n        if(this.state.cursor < this.state.entries.length){\r\n            this.setState({cursor: this.state.cursor+1});\r\n        }\r\n    }\r\n\r\n    right = () =>{\r\n        let count = this.state.cursor;\r\n        let temp = this.state.answers;\r\n        temp[count] = 1\r\n        this.setState({answer: temp});\r\n        if(this.state.cursor < this.state.entries.length){\r\n            this.setState({cursor: this.state.cursor+1});\r\n        }\r\n    }\r\n\r\n    body = () => {\r\n        let questionNames = [\"dog\",\"cat\",\"bear\",\"cat\",\"fox\",\"dog\",\r\n        \"moose\",\"mouse\",\"fox\",\"fox\",\"dog\",\"cat\",\r\n        \"mouse\",\"fox\",\"moose\",\"moose\",\"lion\",\"mouse\",\r\n        ];\r\n        const {entries, cursor} = this.state;\r\n        return(\r\n            <div className=\"Content\">\r\n                \r\n                <div className=\"Content\">\r\n                    <button className='buttons' onClick={this.wrong}>\r\n                        {questionNames[0+(this.state.cursor*3)]}</button>\r\n                    <button className='buttons' onClick={this.wrong}>\r\n                        {questionNames[1+(this.state.cursor*3)]}</button>\r\n                    <button className='buttons' onClick={this.right}>\r\n                        {questionNames[2+(this.state.cursor*3)]}</button>\r\n                </div>\r\n                {entries.length > 0 ? \r\n                <div className=\"entry\">\r\n                    <Entry entry={entries[cursor]}/>\r\n                </div> : ''};\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        const Entries = Server.fetchEntries();\r\n        this.setState({entries: Entries});\r\n        window.addEventListener(\"keydown\", this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        if(e.keyCode === 39 && this.state.cursor < 5 && this.state.cursor < this.state.entries.length-1){//right\r\n            this.setState({cursor: this.state.cursor+1});\r\n        }\r\n        if(e.keyCode === 37 && this.state.cursor > 0){//left\r\n            this.setState({cursor: this.state.cursor-1});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let total = 0;\r\n        console.log(this.state.answers)\r\n        total = this.state.answers[0]+this.state.answers[1]+this.state.answers[2]+this.state.answers[3]+this.state.answers[4]+this.state.answers[5]+this.state.answers[6];\r\n        return (\r\n            <div>\r\n                <div className=\"TopRight\">\r\n                    <Link to=\"/\">Home</Link>\r\n                </div>\r\n                <div className=\"Content\">Hello to Q1\r\n                <br/>Hit right arrow to move right\r\n                <br/>Hit left arrow to move left\r\n                <br/>Choosing answer moves forward\r\n                <br/>The last question page (6/6) submits score\r\n                <br/><br/><br/><br/>\r\n                </div>\r\n                <div className=\"Content\">\r\n                    {this.state.cursor < 6 ? <div>{this.body()}</div>\r\n                        : \"Your Score: \"+total+\"/6\"}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Quiz1","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n} from \"react-router-dom\"\nimport Home from './Components/Home';\nimport Login from './Components/Login';\nimport Quiz2 from './Components/Quiz2';\nimport Quiz3 from './Components/Quiz3';\nimport Quiz1 from './Components/Quiz1';\n\n//basename={process.env.PUBLIC_URL}\nfunction App() {\n  return (\n    <BrowserRouter >\n      <Switch>\n        <Route path='/login'>\n          <Login />\n        </Route>\n        <Route path='/quiz1'>\n          <Quiz1 />\n        </Route>\n        <Route path='/quiz2'>\n          <Quiz2 />\n        </Route>\n        <Route path='/quiz3'>\n          <Quiz3 />\n        </Route>\n        <Route path='/' render={props => <Home {...props} />}>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}